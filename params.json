{"name":"OctoPrint","body":"OctoPrint provides a responsive web interface for controlling a 3D printer (RepRap, Ultimaker, ...). It currently\r\nallows\r\n\r\n* uploading .gcode files to the server and managing them via the UI\r\n* selecting a file for printing, getting the usual stats regarding filament length etc (stats can be disabled for faster initial processing)\r\n* starting, pausing and canceling a print job\r\n* while connected to the printer, gaining information regarding the current temperature of both head and bed (if available) in a nice shiny javascript-y temperature graph\r\n* while printing, gaining information regarding the current progress of the print job (height, percentage etc)\r\n* reading the communication log and send arbitrary codes to be executed by the printer\r\n* moving the X, Y and Z axis (jog controls, although very ugly ones right now)\r\n* changing the speed modifiers for inner & outer wall, fill and support\r\n* optional: visual monitoring of the printer via webcam stream integrated into the UI (using e.g. MJPG-Streamer)\r\n* optional: creation of timelapse recordings of the printjob via webcam stream (using e.g. MJPG-Streamer) -- currently two timelaspe methods are implemented, triggering a shot on z-layer change or every \"n\" seconds\r\n\r\nThe intended usecase is to run OctoPrint on a single-board computer like the Raspberry Pi and a WiFi module, connect the printer to the server and therefore create a WiFi-enabled 3D printer.","tagline":"Print anything from anywhere","note":"Don't delete this file! It's used internally to help with page regeneration.","google":""}